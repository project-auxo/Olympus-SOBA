package service

import (
	"google.golang.org/protobuf/proto"

	"github.com/Project-Auxo/Olympus/pkg/mdapi"
	mdapi_pb "github.com/Project-Auxo/Olympus/proto/mdapi"

	// Import services that can be accessed by the loader here.
	"github.com/Project-Auxo/Olympus/pkg/service/echo"
)

// TODO: This file is supposed to be autogenerated.

var Loader func(string) error


// DispatchRequest will load a service from vantage point of the actor.
func DispatchRequest(client *mdapi.Mdcli, serviceName string,
	requestProto mdapi_pb.WrapperCommand) {
		checkService(serviceName)

		switch serviceName {
		// Client echo does ...
		case "echo":
			echo.ClientRequest(client, request)
		}
}

// LoadService is used by the coordinator.
func LoadService(worker *mdapi.Mdwrk, serviceName string,
	requestProto mdapi_pb.WrapperCommand) (response mdapi_pb.WrapperCommand) {
		checkService(serviceName)

		switch serviceName {
		// Actor echo does ...
		case "echo":
			response = echo.ActorResponse(worker, requestProto)
		}
		return
}
